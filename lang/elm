language = "elm"
name = "Elm"
homepage = Just "https://elm-lang.org/"
spec = Tutorial
status = Unmaintained

impl = Standalone
domain = [ UserInterface ]
platform = [ Web ]

typing = Static
safety = TypeSafe
mm = AutomaticMM
everything = AMess

paradigms = [ Functional, EventDriven ]
parallelism = [ ]
features = [ Closures, NominalTyping, TypeInference ]
concurrency = [ ]
runtime = [ Stack, Interpreter, Scheduler, GarbageCollector, ErrorHandling, Abstraction, VirtualMachine ]

orthogonality = Impressive
example =
  """
  module Main exposing (..)
  import Browser
  import Html exposing (Html, button, div, text)
  import Html.Events exposing (onClick)

  main = Browser.sandbox { init = init, update = update, view = view }

  type alias Model = Int

  init : Model
  init = 0

  type Msg = Increment | Decrement

  update : Msg -> Model -> Model
  update msg model =
    case msg of
      Increment -> model + 1
      Decrement -> model - 1

  view : Model -> Html Msg
  view model =
    div []
      [ button [ onClick Decrement ] [ text "-" ]
      , div [] [ text (String.fromInt model) ]
      , button [ onClick Increment ] [ text "+" ]
      ]
  """
